# Remember the last 5000 commands.
setopt share_history

# Have zsh tell you when background jobs finish.
setopt notify

# Turn off the infuriating beeping noises.
setopt nobeep

# Protect files from being overwritten.
setopt noclobber

# Add a spell checking option for commands.
setopt correct

# Include dotfiles when using <command> *.
setopt glob_dots

# Disable core dumps.
ulimit -c 0

# Load zmv, which does programmable file renaming.
autoload -U zmv

# Use vim-style command editing and navigation.
bindkey -v
# But fix backspacing over characters.
bindkey '^?' backward-delete-char
# And allow use of arrow keys in !foo<tab> search.
bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward

# Temporarily disabled while I try oh-my-zsh's completion.zsh plugin.
# Load the zsh completion system
# zstyle :compinstall file "$XDG_CONFIG_HOME/zsh/.zshrc"
# autoload -Uz compinit bashcompinit
# compinit
# bashcompinit
# setopt COMPLETE_IN_WORD    # Complete from both ends of a word.
# setopt ALWAYS_TO_END       # Move cursor to the end of a completed word.
# setopt PATH_DIRS           # Perform path search even on command names with slashes.
# setopt AUTO_MENU           # Show completion menu on a successive tab press.
# setopt AUTO_LIST           # Automatically list choices on ambiguous completion.
# setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash.
# unsetopt MENU_COMPLETE     # Do not autoselect the first completion entry.
# unsetopt FLOW_CONTROL      # Disable start/stop characters in shell editor
# unsetopt CDABLE_VARS       # Don't search ~ when completing `cd`

# Load antibody's plugin bundle.
source $XDG_CACHE_HOME/zsh/plugins.zsh

# Autocompletion and keybindings for fzf.
source /usr/share/doc/fzf/examples/completion.zsh
source /usr/share/doc/fzf/examples/key-bindings.zsh

# Load autojump.
source /usr/share/autojump/autojump.zsh

# Load aliases.
source $XDG_CONFIG_HOME/zsh/aliases.zsh

# Make cd print directory contents.
cd() {
  builtin cd $1;
  ls;
}

# Set prompt using starship.rs.
eval "$(starship init zsh)"
